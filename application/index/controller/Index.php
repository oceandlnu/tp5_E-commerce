<?php

namespace app\index\controller;

use think\Controller;
use think\Request;
use think\Db;
use think\Session;
use think\Cookie;
use app\admin\model\User;
use app\admin\model\Cate;
use app\admin\model\Pro;
use app\admin\model\Album;

class Index extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function check()
    {
        if (User::check_is_login()) {
            $res = 'index';
        } elseif (!Request::instance()->has('verify', 'post')) {
            $res = 'login';
        } else {
            $data = Request::instance()->post();
            if (User::check_login($data)) {
                $res = 'index';
            } else {
                $res = 'login';
            }
        }
        $this->success('', $res, '', 1);
    }

    public function index()
    {
//        $this->view->engine->layout(true);
        $cates = Cate::all();
        $this->assign('cates', $cates);
        return $this->fetch();
    }

    public function login()
    {
        return $this->fetch();
    }

    public function logout()
    {
        User::logout();
        $this->success('', 'index', '', 1);
    }

    public function reg()
    {
        return $this->fetch();
    }

    public function doReg()
    {
        $request = Request::instance();
        $data = $request->post();
        if ($data['password'] !== $data['confirmPwd']) {
            alertMes("两次输入密码不一致，请重新输入");
            $this->success('', 'reg');
        }
        $facePath = "public/static/index/images/userFaces";
        $file = $request->file('face');
        if ($file) {
            $vali = ['ext' => 'jpg,png,gif'];
            $rule = 'uniqid';
            $info = $file->rule($rule)->validate($vali)->move(ROOT_PATH . $facePath);
            if ($info) {
                $data['face'] = $info->getSaveName();
            } else {
                echo $info->getError();
            }
            $data['regTime'] = time();
            $data['password'] = md5($data['password']);
            $user = new User($data);
            $user->allowField(true)->save();
            $id = $user->id;
            alertMes("注册成功");
            Cookie::set('userId', $id, 7 * 24 * 3600);
            Cookie::set('userName', $data['username'], 7 * 24 * 3600);
            Session::set('userId', $id);
            Session::set('userName', $data['username']);
            $this->success('', 'index');
        } else {
            alertMes("请上传头像");
            $this->success('', 'reg');
        }
    }

    public function proCate()
    {
        return $this->fetch();
    }

    public function proDetails()
    {
        $request = Request::instance();
        $id = $request->get('id');
        $str = "p.id,p.pName,p.pSn,p.pNum,p.mPrice,p.iPrice,p.pDesc,p.pubTime,p.isShow,p.isHot,c.cName,p.cId";
        $proInfo = Pro::alias('p')->field($str)->join('shop_cate c', 'p.cId=c.id')->where(['p.id' => $id])->find();
        $proImgs = Album::where(['pid' => $id])->column('albumPath');
        $this->assign('proInfo', $proInfo);
        $this->assign('proImgs', $proImgs);
        $this->assign('id', $id);
//        dump($proImgs);
        return $this->fetch();
    }

    public function shopCar()
    {
        return $this->fetch();
    }

    public function filter()
    {
        return $this->fetch();

    }

    public function _empty()
    {
        return '404';
    }
}
